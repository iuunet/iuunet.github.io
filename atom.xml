<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://iuunet.github.io</id>
    <title>Gridea</title>
    <updated>2022-06-19T13:27:57.953Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://iuunet.github.io"/>
    <link rel="self" href="https://iuunet.github.io/atom.xml"/>
    <subtitle>温故而知新</subtitle>
    <logo>https://iuunet.github.io/images/avatar.png</logo>
    <icon>https://iuunet.github.io/favicon.ico</icon>
    <rights>All rights reserved 2022, Gridea</rights>
    <entry>
        <title type="html"><![CDATA[Gridea+Github搭建个人博客喂饭教程]]></title>
        <id>https://iuunet.github.io/post/grideagithub-da-jian-ge-ren-bo-ke-wei-fan-jiao-cheng/</id>
        <link href="https://iuunet.github.io/post/grideagithub-da-jian-ge-ren-bo-ke-wei-fan-jiao-cheng/">
        </link>
        <updated>2022-06-19T13:25:20.000Z</updated>
        <content type="html"><![CDATA[<p>注册Github<br>
打开Github官网，如果你有代理的话更好，如果没有的话，可以考虑下载Steam++。这个用法自行研究，很简单，打开就能用。楼主我是用代理。</p>
<p>点击sing up for github,然后在跳出的页面中输入你的邮箱，按照官方的提示输入需要的信息，完成注册。之后进入你的Github，不要关闭，下面备用。</p>
<p>下载Gridea<br>
打开Gridea网站,下载你对应系统的版本，之后点击安装。打开你的Gridea程序。</p>
<p>左下角的设置图标，点击打开它。可以看到有语言设置和站点源文件路劲，修改这个源文件路径到你想要的地方。如果你有OneDrive网盘的账号的话，可以在里面新建一个文件夹来存放默认Gridea的源文件。直接把它复制过去，这样以后你换电脑，只要同步OneDrive就可以完成多个终端写博客了。</p>
<p>设置完源文件之后，我们开始设置Github连接的信息。打开远程选项，可以看到里面有很多种部署方法，今天就介绍Github Pages的方法。</p>
<p>回到我们自己的Github网页上，新建一个仓库，仓库的名字（Repository name）要写自己的Github用户名.github.io,具体内容格式为mygithubname.github.io。其他的信息可以保持默认。之后点击头像-&gt;Settings-&gt;Developer settings-&gt;OAuth Apps,新建一个Token。</p>
<p>可以直接点击这里跳转过去。勾选上 repo 的相关权限即可。生成之后记得把 Token 复制到你的本地，因为一旦关闭网页将不能再看到它。</p>
<p>之后进入Gridea中设置相关信息。</p>
<figure data-type="image" tabindex="1"><img src="https://iuunet.github.io/post-images/1655645255010.png" alt="" loading="lazy"></figure>
<p>点击 Gridea 中的 同步按钮即可。初次部署等待几分钟之后就可以去浏览器访问了，默认地址为你在上面所填写的域名。</p>
<p>如果操作遇到什么问题，请查看官方的部署文档，更加详细。我这里遇到的是github的用户名不清楚，可以点击头像出现的Singed in as 后面的就是你设置的用户名。</p>
<p>Gridea设置git代理<br>
由于github的服务器地址在国外，上传文件会很卡顿，而且经常失败。最近更新的v0.9.3中加入了git的代理设置，在Http代理中点击proxy，地址一般都是写上你的本地地址127.0.0.1，如果你有软路由的话，写你软路的地址。端口写上你代理软件对应出去的http端口，不要写成sockt的端口。</p>
<p>个性化域名<br>
上面的设置完成之后你访问用户名.github.io就能看到你的博客内容了。楼主这里是用的freenom的域名，然后在cloudflare上设置域名的。例如我有个blog.gridea.com的域名，那么在域名设置那里新建一个blog.gridea.com的A内容，这代表着ipv4的域名对应关系设置。里面的ip地址填写的是你获取github的ip地址。如果获取呢，通过在终端上ping 用户名.github.io 这个地址，就能看到你的Ip地址了。设置之后等待一段时间，这个时候访问你的域名blog.gridea.com就能看到你的博客网站了。</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Ubuntu 部署Docker]]></title>
        <id>https://iuunet.github.io/post/ubuntu-bu-shu-docker/</id>
        <link href="https://iuunet.github.io/post/ubuntu-bu-shu-docker/">
        </link>
        <updated>2022-06-19T12:22:27.000Z</updated>
        <content type="html"><![CDATA[<p>第 1 步-安装 Docker<br>
官方 Ubuntu 存储库中提供的 Docker 安装软件包可能不是最新版本。</p>
<p>Ubuntu 官方的版本库中并不一定是 Docker 最新的安装包，为了保证是最新版，我们从 Docker 官方库来安装。</p>
<p>首先，更新现有的软件包列表：</p>
<p>$ sudo apt update<br>
注意：如果无法更新，可能是你的软件源指向是国外的服务器，很可能已经被墙。所有首次更新请打开 VPN。</p>
<p>接下来，安装一些必备软件包，让 apt 通过 HTTPS 使用软件包。</p>
<p>sudo apt install apt-transport-https ca-certificates curl software-properties-common<br>
然后将官方 Docker 版本库的 GPG 密钥添加到系统中：</p>
<p>curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -<br>
执行后显示</p>
<p>OK<br>
将 Docker 版本库添加到APT源：</p>
<p>sudo add-apt-repository &quot;deb [arch=amd64] https://download.docker.com/linux/ubuntu focal stable&quot;<br>
执行后显示：</p>
<p>Get:1 https://download.docker.com/linux/ubuntu focal InRelease [36.2 kB]<br>
Hit:2 http://cn.archive.ubuntu.com/ubuntu focal InRelease<br>
Get:3 https://download.docker.com/linux/ubuntu focal/stable amd64 Packages [3056 B]<br>
Hit:4 http://cn.archive.ubuntu.com/ubuntu focal-updates InRelease<br>
Hit:5 http://cn.archive.ubuntu.com/ubuntu focal-backports InRelease<br>
Hit:6 http://cn.archive.ubuntu.com/ubuntu focal-security InRelease<br>
Fetched 39.2 kB in 2s (16.1 kB/s)<br>
Reading package lists... Done<br>
接下来，我们用新添加的 Docker 软件包来进行升级更新。</p>
<p>sudo apt update<br>
确保要从 Docker 版本库，而不是默认的 Ubuntu 版本库进行安装：</p>
<p>apt-cache policy docker-ce<br>
执行后会看到这样的结果（ Docker 的版本号可能略有不同）</p>
<p>docker-ce:<br>
Installed: (none)<br>
Candidate: 5:19.03.12<sub>3-0</sub>ubuntu-focal<br>
Version table:<br>
5:19.03.12<sub>3-0</sub>ubuntu-focal 500<br>
500 https://download.docker.com/linux/ubuntu focal/stable amd64 Packages<br>
5:19.03.11<sub>3-0</sub>ubuntu-focal 500<br>
500 https://download.docker.com/linux/ubuntu focal/stable amd64 Packages<br>
5:19.03.10<sub>3-0</sub>ubuntu-focal 500<br>
500 https://download.docker.com/linux/ubuntu focal/stable amd64 Packages<br>
5:19.03.9<sub>3-0</sub>ubuntu-focal 500<br>
500 https://download.docker.com/linux/ubuntu focal/stable amd64 Packages<br>
请注意，到目前这一步docker-ce还未安装，但根据上一步中的列表，可以看到 docker-ce 来自 Docker 官方版本库。</p>
<p>最后，安装 Docker ：</p>
<p>sudo apt install docker-ce<br>
现在 Docker 已经安装完毕。我们启动守护程序。检查 Docker 是否正在运行：</p>
<p>sudo systemctl status docker<br>
执行结果类似以下内容，说明该服务处于活动状态并且正在运行：</p>
<p>● docker.service - Docker Application Container Engine<br>
Loaded: loaded (/lib/systemd/system/docker.service; enabled; vendor preset: enabled)<br>
Active: active (running) since Sat 2020-07-08 02:55:20 UTC; 5min ago<br>
TriggeredBy: ● docker.socket<br>
Docs: https://docs.docker.com<br>
Main PID: 4287 (dockerd)<br>
Tasks: 8<br>
Memory: 36.4M<br>
CGroup: /system.slice/docker.service<br>
└─4287 /usr/bin/dockerd -H fd:// --containerd=/run/containerd/containerd.sock<br>
现在，安装 Docker 不仅可以为您提供 Docker 服务（守护程序），还可以为您提供docker命令行实用程序或 Docker 客户端。docker命令行的使用会在本教程后边讨论。</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Hello Gridea]]></title>
        <id>https://iuunet.github.io/post/hello-gridea/</id>
        <link href="https://iuunet.github.io/post/hello-gridea/">
        </link>
        <updated>2018-12-11T16:00:00.000Z</updated>
        <summary type="html"><![CDATA[<p>👏  欢迎使用 <strong>Gridea</strong> ！<br>
✍️  <strong>Gridea</strong> 一个静态博客写作客户端。你可以用它来记录你的生活、心情、知识、笔记、创意... ...</p>
]]></summary>
        <content type="html"><![CDATA[<p>👏  欢迎使用 <strong>Gridea</strong> ！<br>
✍️  <strong>Gridea</strong> 一个静态博客写作客户端。你可以用它来记录你的生活、心情、知识、笔记、创意... ...</p>
<!-- more -->
<p><a href="https://github.com/getgridea/gridea">Github</a><br>
<a href="https://gridea.dev/">Gridea 主页</a><br>
<a href="http://fehey.com/">示例网站</a></p>
<h2 id="特性">特性👇</h2>
<p>📝  你可以使用最酷的 <strong>Markdown</strong> 语法，进行快速创作</p>
<p>🌉  你可以给文章配上精美的封面图和在文章任意位置插入图片</p>
<p>🏷️  你可以对文章进行标签分组</p>
<p>📋  你可以自定义菜单，甚至可以创建外部链接菜单</p>
<p>💻  你可以在 <strong>Windows</strong>，<strong>MacOS</strong> 或 <strong>Linux</strong> 设备上使用此客户端</p>
<p>🌎  你可以使用 <strong>𝖦𝗂𝗍𝗁𝗎𝖻 𝖯𝖺𝗀𝖾𝗌</strong> 或 <strong>Coding Pages</strong> 向世界展示，未来将支持更多平台</p>
<p>💬  你可以进行简单的配置，接入 <a href="https://github.com/gitalk/gitalk">Gitalk</a> 或 <a href="https://github.com/SukkaW/DisqusJS">DisqusJS</a> 评论系统</p>
<p>🇬🇧  你可以使用<strong>中文简体</strong>或<strong>英语</strong></p>
<p>🌁  你可以任意使用应用内默认主题或任意第三方主题，强大的主题自定义能力</p>
<p>🖥  你可以自定义源文件夹，利用 OneDrive、百度网盘、iCloud、Dropbox 等进行多设备同步</p>
<p>🌱 当然 <strong>Gridea</strong> 还很年轻，有很多不足，但请相信，它会不停向前 🏃</p>
<p>未来，它一定会成为你离不开的伙伴</p>
<p>尽情发挥你的才华吧！</p>
<p>😘 Enjoy~</p>
]]></content>
    </entry>
</feed>